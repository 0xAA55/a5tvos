#include "gpio.hpp"

enum GPIO_A_CFG0Type
{
	GPIO_A_CFG0_IN = 0,
	GPIO_A_CFG0_OUT = 1,
	GPIO_A_CFG0_TP_X1 = 2,
	GPIO_A_CFG0_RESERVED = 3,
	GPIO_A_CFG0_DA_BCLK = 4,
	GPIO_A_CFG0_UART1_RTS = 5,
	GPIO_A_CFG0_SPI1_CS = 6,
	GPIO_A_CFG0_DISABLED = 7
};

enum GPIO_A_CFG1Type
{
	GPIO_A_CFG1_IN = 0,
	GPIO_A_CFG1_OUT = 1,
	GPIO_A_CFG1_TP_X2 = 2,
	GPIO_A_CFG1_RESERVED = 3,
	GPIO_A_CFG1_DA_LCLK = 4,
	GPIO_A_CFG1_UART1_CTS = 5,
	GPIO_A_CFG1_SPI1_MISO = 6,
	GPIO_A_CFG1_DISABLED = 7
};

enum GPIO_A_CFG2Type
{
	GPIO_A_CFG2_IN = 0,
	GPIO_A_CFG2_OUT = 1,
	GPIO_A_CFG2_TP_Y1 = 2,
	GPIO_A_CFG2_PWM0 = 3,
	GPIO_A_CFG2_DA_IN = 4,
	GPIO_A_CFG2_UART1_RX = 5,
	GPIO_A_CFG2_SPI1_CLK = 6,
	GPIO_A_CFG2_DISABLED = 7
};

enum GPIO_A_CFG3Type
{
	GPIO_A_CFG3_IN = 0,
	GPIO_A_CFG3_OUT = 1,
	GPIO_A_CFG3_TP_Y2 = 2,
	GPIO_A_CFG3_IR_RX = 3,
	GPIO_A_CFG3_DA_OUT = 4,
	GPIO_A_CFG3_UART1_TX = 5,
	GPIO_A_CFG3_SPI1_MISO = 6,
	GPIO_A_CFG3_DISABLED = 7
};

enum GPIO_B_CFG3Type
{
	GPIO_B_CFG3_IN = 0,
	GPIO_B_CFG3_OUT = 1,
	GPIO_B_CFG3_DDR_REF_D = 2,
	GPIO_B_CFG3_IR_RX = 3,
	GPIO_B_CFG3_RESERVED1 = 4,
	GPIO_B_CFG3_RESERVED2 = 5,
	GPIO_B_CFG3_RESERVED3 = 6,
	GPIO_B_CFG3_DISABLED = 7
};

enum GPIO_C_CFG0Type
{
	GPIO_C_CFG0_IN = 0,
	GPIO_C_CFG0_OUT = 1,
	GPIO_C_CFG0_SPI0_CLK = 2,
	GPIO_C_CFG0_SDC1_CLK = 3,
	GPIO_C_CFG0_RESERVED1 = 4,
	GPIO_C_CFG0_RESERVED2 = 5,
	GPIO_C_CFG0_RESERVED3 = 6,
	GPIO_C_CFG0_DISABLED = 7
};

enum GPIO_C_CFG1Type
{
	GPIO_C_CFG1_IN = 0,
	GPIO_C_CFG1_OUT = 1,
	GPIO_C_CFG1_SPI0_CS = 2,
	GPIO_C_CFG1_SDC1_CMD = 3,
	GPIO_C_CFG1_RESERVED1 = 4,
	GPIO_C_CFG1_RESERVED2 = 5,
	GPIO_C_CFG1_RESERVED3 = 6,
	GPIO_C_CFG1_DISABLED = 7
};

enum GPIO_C_CFG2Type
{
	GPIO_C_CFG2_IN = 0,
	GPIO_C_CFG2_OUT = 1,
	GPIO_C_CFG2_SPI0_MISO = 2,
	GPIO_C_CFG2_SDC1_D0 = 3,
	GPIO_C_CFG2_RESERVED1 = 4,
	GPIO_C_CFG2_RESERVED2 = 5,
	GPIO_C_CFG2_RESERVED3 = 6,
	GPIO_C_CFG2_DISABLED = 7
};

enum GPIO_C_CFG3Type
{
	GPIO_C_CFG3_IN = 0,
	GPIO_C_CFG3_OUT = 1,
	GPIO_C_CFG3_SPI0_MOSI = 2,
	GPIO_C_CFG3_UART0_TX = 3,
	GPIO_C_CFG3_RESERVED1 = 4,
	GPIO_C_CFG3_RESERVED2 = 5,
	GPIO_C_CFG3_RESERVED3 = 6,
	GPIO_C_CFG3_DISABLED = 7
};

bool GPIO_PeriphType::ReadBit(int Port) const
{
	return DATA & (1 << Port);
}

void GPIO_PeriphType::WriteBit(int Port)
{
	uint32_t Bit = 1 << Port;
	DATA = (DATA & (~Bit)) | Bit;
}
